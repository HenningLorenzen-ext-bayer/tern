% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kaplan_meier_plot.R
\name{g_km}
\alias{g_km}
\title{Kaplan-Meier Plot}
\usage{
g_km(
  fit_km,
  xticks = NULL,
  col = NULL,
  lty = NULL,
  lwd = 0.5,
  censor_show = TRUE,
  pch = "|",
  size = 3,
  max_time = NULL,
  xlab = "Days",
  ylab = "Survival Probability",
  title = "Kaplan-Meier Plot",
  draw = TRUE,
  newpage = TRUE,
  gp = NULL,
  vp = NULL,
  name = NULL,
  ggtheme = NULL,
  annot_at_risk = TRUE,
  annot_surv_med = TRUE
)
}
\arguments{
\item{fit_km}{(\code{survfit})\cr see \code{\link[survival:survfit]{survival::survfit()}}.}

\item{xticks}{(\code{numeric} or \code{number})\cr
numeric vector of ticks or single number with spacing
between ticks on the x axis.
If \code{NULL}, \code{\link[labeling:extended]{labeling::extended()}} is used to determine
an optimal tick position on the x axis.}

\item{col}{(\code{character})\cr lines colors. Length of a vector should be equal
to number of strata from \code{\link[survival:survfit]{survival::survfit()}}.}

\item{lty}{(\code{numeric})\cr line type. Length of a vector should be equal
to number of strata from \code{\link[survival:survfit]{survival::survfit()}}.}

\item{lwd}{(\code{numeric})\cr line width. Length of a vector should be equal
to number of strata from \code{\link[survival:survfit]{survival::survfit()}}.}

\item{censor_show}{(\code{flag})\cr whether to show censored.}

\item{pch}{(\code{numeric})\cr point type for censored.}

\item{size}{(\code{numeric})\cr size of censored point, a class of \code{unit}.}

\item{max_time}{(\code{numeric})\cr maximum value of X axis range (\code{NULL} for
default)}

\item{xlab}{(\code{string})\cr label of x-axis.}

\item{ylab}{(\code{string})\cr label of y-axis.}

\item{title}{(\code{string})\cr title for plot.}

\item{draw}{(\code{flag})\cr draw the plot on device.}

\item{newpage}{(\code{flag})\cr open a new page on the graphic device.}

\item{gp}{A gpar object, typically the output
    from a call to the function \code{gpar}.  This is basically
    a list of graphical parameter settings.}

\item{vp}{a \code{\link[grid]{viewport}} object (or \code{NULL}).}

\item{name}{a character identifier for the grob.  Used to find the
    grob on the display list and/or as a child of another grob. }

\item{ggtheme}{(\code{theme})\cr a graphical theme as provided by \code{ggplot2} to
control outlook of the Kaplan-Meier curve.}

\item{annot_at_risk}{(\code{flag})\cr compute and add the annotation table
reporting the number of patient at risk matching the main grid of the
Kaplan-Meier curve.}

\item{annot_surv_med}{(\code{flag})\cr compute and add the annotation table
on the top right corner of the Kaplan-Meier curve estimating the
median survival time per group.}
}
\description{
From a survival model, a graphic is rendered along with tabulated annotation
including the number of patient at risk at given time and the median survival
per group.
}
\examples{

library(random.cdisc.data)
library(dplyr)
library(survival)
library(grid)

fit_km <- radtte(cached = TRUE) \%>\%
  filter(PARAMCD == "OS") \%>\%
  survfit(form = Surv(AVAL, 1 - CNSR) ~ ARMCD, data = .)

# 1. Example - basic option

res <- g_km(fit_km = fit_km)
res <- g_km(fit_km = fit_km, col = c("grey25", "grey50", "grey75"))
res <- g_km(fit_km = fit_km, ggtheme = ggplot2::theme_minimal())
res <- g_km(fit_km = fit_km, ggtheme = ggplot2::theme_minimal(), lty = 1:3)
res <- g_km(fit_km = fit_km, max = 2000)

# 2. Example - Arrange several KM curve on a single graph device

# 2.1 Use case: A general graph on the top, a zoom on the bottom.
grid::grid.newpage()
lyt <- grid.layout(nrow = 2, ncol = 1) \%>\%
  grid::viewport(layout = .) \%>\%
  pushViewport()

res <- g_km(
  fit_km = fit_km, newpage = FALSE, annot_surv_med = FALSE,
  vp = grid::viewport(layout.pos.row = 1, layout.pos.col = 1)
)
res <- g_km(
  fit_km = fit_km, max = 1000, newpage = FALSE, annot_surv_med = FALSE,
  ggtheme = ggplot2::theme_dark(),
  vp = grid::viewport(layout.pos.row = 2, layout.pos.col = 1)
)

# 2.1 Use case: No annotations on top, annotated graph on bottom
grid::grid.newpage()
lyt <- grid.layout(nrow = 2, ncol = 1) \%>\%
  grid::viewport(layout = .) \%>\%
  pushViewport()

res <- g_km(
  fit_km = fit_km, newpage = FALSE,
  annot_surv_med = FALSE, annot_at_risk = FALSE,
  vp = grid::viewport(layout.pos.row = 1, layout.pos.col = 1)
)
res <- g_km(
  fit_km = fit_km, max = 2000, newpage = FALSE, annot_surv_med = FALSE,
  annot_at_risk = TRUE,
  ggtheme = ggplot2::theme_dark(),
  vp = grid::viewport(layout.pos.row = 2, layout.pos.col = 1)
)

}
