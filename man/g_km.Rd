% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/g_km.R
\name{g_km}
\alias{g_km}
\title{Kaplan-Meier Plot}
\usage{
g_km(fit_km, xticks = NULL, col = NA, lty = 1, lwd = 1,
  censor.show = TRUE, pch = 3, size = unit(0.5, "char"),
  title = "Kaplan - Meier Plot", xlab = "Days",
  ylab = "Survival Probability", draw = TRUE, newpage = TRUE,
  gp = NULL, vp = NULL, name = NULL)
}
\arguments{
\item{fit_km}{a class \code{\link{survfit}} object.}

\item{xticks}{break interval of x-axis. It takes a numeric vector or \code{NULL}.}

\item{col}{line color.}

\item{lty}{line type.}

\item{lwd}{line width.}

\item{censor.show}{\code{TRUE/FALSE} to show censored.}

\item{pch}{point type for censored.}

\item{size}{size of censored point, a class of \code{unit}.}

\item{title}{title for plot.}

\item{xlab}{a string for label of x-axis}

\item{ylab}{a string for label of y-axis.}

\item{draw}{draw the plot on device.}

\item{newpage}{open a new draw page.}

\item{gp}{a abject of class \code{gpar}.}

\item{vp}{a grid \code{viewport}.}

\item{name}{A character value to uniquely identify the object.}
}
\description{
Create a KM plot for any \code{\link[survival]{survfit}} object.
}
\examples{
library(random.cdisc.data)
library(tern)
library(dplyr)
ASL <- radsl()
ASL$RACE <- factor(sapply(as.character(ASL$RACE), function(x) {
   if (nchar(x)>9) paste0(substr(x, 1,9), "...") else x
}))
ATE <- radte(ADSL = ASL)

ATE_f <- subset(ATE, PARAMCD == "OS") 

ANL <- merge(ASL[,c("USUBJID", "STUDYID", "SEX")],
 ATE_f, by = c("USUBJID", "STUDYID"))
fit_km <- survfit(Surv(AVAL, 1-CNSR) ~ ARM, data = ANL, conf.type = "plain")
g_km(fit_km = fit_km)

p <- g_km(fit_km = fit_km, col = c("black", "red", "blue"), lty = c(1, 2, 3), draw = FALSE)
y <-  textGrob(label = toString(tern:::t_km(fit_km), gap = 1), 
                   x = unit(0.5, "npc"),
                   y = unit(0.9, "npc"),
                   just = c("left", "top"),
                   gp = gpar(fontfamily = 'mono', fontsize = 8, fontface = "bold"))
p <- addGrob(p, gTree(children = gList(y), vp = vpPath("mainPlot", "kmCurve", "curvePlot")))                  
grid.newpage()
grid.draw(p)

fit_km <- survfit(Surv(AVAL, 1-CNSR) ~ 1, data = ANL, conf.type = "plain")
g_km(fit_km, xlab = "Duration (Days)", col = "green" )

}
\author{
Heng Wang (wangh107) \email{wang.heng@gene.com}
}
