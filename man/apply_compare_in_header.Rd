% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_summary_variants.R
\name{apply_compare_in_header}
\alias{apply_compare_in_header}
\title{Stacks \code{x} and \code{col_by} when \code{compare_in_header} attribute is present}
\usage{
apply_compare_in_header(x, col_by, col_N = NULL)
}
\arguments{
\item{x}{data.frame with numeric columns that are stacked}

\item{col_by}{col_by data.frame}

\item{col_N}{numeric vector of length \code{ncol(col_by)} or \code{NULL} -> computed from \code{col_by}}
}
\value{
list(
  x = stacked x,
  col_by = hierarchical col_by with additional hierarchical level for each column of x,
    TRUE at entries where corresponding column appears in x
)
}
\description{
Will create a hierarchical header for each column of x and the columns will be compared
}
\examples{
x <- compare_in_header(data.frame(`AVAL` = as.numeric(1:3),
  `CHG` = as.numeric(4:6), `CHG2` = as.numeric(7:9)))
col_by <- data.frame(`ARM A` = c(TRUE, TRUE, FALSE), `ARM B` = c(TRUE, FALSE, FALSE))
res <- tern:::apply_compare_in_header(x, col_by)
x <- res$x
col_by <- res$col_by
col_N <- res$col_N
lapply(col_by, function(by) x[by])

library(random.cdisc.data)
ADVS <- cadvs
x <- compare_in_header(ADVS[c("AVAL", "CHG")])
col_by <- ADVS$ARM
res <- tern:::apply_compare_in_header(x, col_by, col_N = NULL)
x <- res$x
col_by <- res$col_by
col_N <- res$col_N
}
