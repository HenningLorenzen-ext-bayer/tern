% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abnormal_by_worst_grade_by_baseline.R
\name{abnormal_by_worst_grade_by_baseline}
\alias{abnormal_by_worst_grade_by_baseline}
\alias{h_adsl_adlb_merge_using_worst_flag}
\alias{h_group_counter}
\alias{s_count_abnormal_by_worst_grade_by_baseline}
\alias{a_count_abnormal_by_worst_grade_by_baseline}
\alias{count_abnormal_by_worst_grade_by_baseline}
\title{Patient Counts with the Most Extreme Post-Baseline Toxicity Grade by Baseline NCI-CTCAE Grade}
\usage{
h_adsl_adlb_merge_using_worst_flag(
  adsl,
  adlb,
  worst_flag = c(WGRHIFL = "Y"),
  by_visit = FALSE
)

h_group_counter(df, id, .var, grouping_list)

s_count_abnormal_by_worst_grade_by_baseline(
  df,
  .var = "ATOXGR",
  grouping_list = list(Missing = "<Missing>", `Not High` = c(0, -1, -2, -3, -4), `1` =
    1, `2` = 2, `3` = 3, `4` = 4),
  variables = list(id = "USUBJID", by_var = "BTOXGR", by_grade = "Missing")
)

a_count_abnormal_by_worst_grade_by_baseline(
  df,
  .var = "ATOXGR",
  grouping_list = list(Missing = "<Missing>", `Not High` = c(0, -1, -2, -3, -4), `1` =
    1, `2` = 2, `3` = 3, `4` = 4),
  variables = list(id = "USUBJID", by_var = "BTOXGR", by_grade = "Missing")
)

count_abnormal_by_worst_grade_by_baseline(
  lyt,
  var,
  grouping_list,
  variables = list(id = "USUBJID", by_var = "BTOXGR", by_grade_list = NULL),
  ...,
  table_names = NULL,
  .stats = NULL,
  .formats = NULL,
  .labels = NULL,
  .indent_mods = NULL
)
}
\arguments{
\item{adsl}{(\verb{data frame}) ADSL dataframe}

\item{adlb}{(\verb{data frame}) ADLB dataframe}

\item{worst_flag}{(named \code{vector})
Worst post-baseline lab flag variable}

\item{by_visit}{(\code{logical}) defaults to \code{FALSE} to generate worst grade per patient.
If worst grade per patient per visit is specified for \code{worst_flag}, then
\code{by_visit} should be \code{TRUE} to generate worst grade patient per visit.}

\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{id}{(\code{string}) \cr subject variable name.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{grouping_list}{(named \code{list}) defining how inner NCI-CTCAE grades should be grouped.}

\item{variables}{(named \code{list} of \code{string}) list of additional analysis variables including:
\itemize{
\item \code{id} (\code{string}): \cr subject variable name
\item \code{by_var} (\code{string}): \cr name of the data column containing the outer level toxicity variable within which toxicity
variable \code{.var} is counted. Inputs for \code{by_var} and \code{.var} can be switched, e.g. \code{.var = ATOXGR} and
\code{by_var = BTOXGR}, this generates post-baseline grade by baseline grade table, or \code{.var = BTOXGR} and
\code{by_var = ATOXGR}, this generates baseline grade by post-baseline grade table.
\item \code{by_grade} (\code{character}): \cr outer level toxicity group of interest for
\code{\link[=s_count_abnormal_by_worst_grade_by_baseline]{s_count_abnormal_by_worst_grade_by_baseline()}}. \code{by_grade} must be identical to the name
of an element in the \code{grouping_list}
\item \code{by_grade_list} (\code{list}): \cr indicating all outer groups of interest for
\code{\link[=count_abnormal_by_worst_grade_by_baseline]{count_abnormal_by_worst_grade_by_baseline()}}. If \verb{by_grade_list`` is not specified, then all groups in }grouping_list\verb{will be used.}by_grade_list\verb{follows the same format as}grouping_list`.
}}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{var}{(\code{string})\cr single variable name for the primary analysis variable.}

\item{...}{additional arguments for the lower level functions.}

\item{table_names}{(\code{character})\cr this can be customized in case that the same \code{vars} are analyzed multiple times,
to avoid warnings from \code{rtables}.}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}
}
\value{
\code{\link[=h_adsl_adlb_merge_using_worst_flag]{h_adsl_adlb_merge_using_worst_flag()}} returns a \code{df}
containing \code{USUBJID}, \code{ARMCD}, \code{AVISIT}, \code{PARAMCD}, \code{ATOXGR}, and \code{BTOXGR}

\code{\link[=h_group_counter]{h_group_counter()}} returns the total number of patients, and counts and fractions for each
group identified in the \code{grouping_list} in a named list, with names from \code{grouping_list}.

\code{\link[=s_count_abnormal_by_worst_grade_by_baseline]{s_count_abnormal_by_worst_grade_by_baseline()}} returns the total patient count, and the
counts and fraction of patients' worst post-baseline NCI-CTCAE grades in each of the groups
in \code{group_listing}, for a particular baseline NCI-CTCAE grade group, \code{by_grade}. Elements of
\code{by_grade_list} must be in the set of names of elements in \code{grouping_list}, or

\code{\link[=a_count_abnormal_by_worst_grade]{a_count_abnormal_by_worst_grade()}} returns the corresponding list with formatted \code{\link[rtables:CellValue]{rtables::CellValue()}}.
}
\description{
Patient count and fraction for laboratory test shift table, highest NCI-CTCAE grade post-baseline by
baseline NCI-CTCAE grade, according to user-defined \code{grouping_list}, is generated. Per GDSR
standard:
\itemize{
\item for abnormality in the high direction, \code{grouping_list} should be defined as: \cr
\code{list("Not High" = c(0, -1, -2, -3, -4), "1" = 1, "2" = 2, "3" = 3, "4" = 4, "Missing" = "<Missing>")}
\item for abnormality in the low direction, \code{grouping_list} should be defined as: \cr
\code{list("Not Low" = c(0, 1, 2, 3, 4), "1" = -1, "2" = -2, "3" = -3, "4" = -4, "Missing" = "<Missing>")} \cr
}

For a particular baseline NCI-CTCAE grade group that is in the \code{grouping_list}, for example, "Not High",
assuming abnormality is in the high direction, the total number of patients who are "Not High" at
baseline is counted, that is the number of patients who have a baseline NCI-CTCAE grades of \code{0},
\code{-1}, \code{-2}, \code{-3} or \code{-4}. In addition, for these patients who are "Not High" at baseline, the
counts and fractions of patients with post-baseline NCI-CTCAE grades in each of the groups in
\code{group_listing} are produced, i.e., "Not High", "1", "2", "3", "4" and "Missing". Note the order
of \code{grouping_list} controls the output order. \cr

Care must be taken when specifying the \code{grouping_list}. Each element in the \code{grouping_list} must
be specified using a \code{=} sign; on the left of the \code{=} sign is the name of the group; on the
right of \code{=} sign is NCI-CTCAE grade(s) to be included in that group, i.e., \code{"NAME" = c(1, 2, 3, 4)}. \cr

User may define custom functions for extracting the worst lab grades. At the minimum, the output \code{df}
should contain \code{USUBJID}, \code{ARMCD}, \code{PARAMCD}, \code{ATOXGR}, and \code{BTOXGR}. One worst lab grade per patient
per lab is expected for each of \code{ATOXGR} and \code{BTOXGR}.
}
\section{Functions}{
\itemize{
\item \code{h_adsl_adlb_merge_using_worst_flag}: Helper function to filter ADSL and ADLB datasets
to create a dataset with the worst post-baseline lab using (\code{worst_flag}) flag. Missing data will be created for the
following situations:
\itemize{
\item patients who are present in ADSL but no lab data in ADLB (both baseline and post-baseline)
\item patients who do not have any post-baseline lab values
\item patients without any post-baseline values flagged as the worst
}

\item \code{h_group_counter}: Helper function to group patients
(identified using \code{id}) according to post-baseline toxicity in \code{.var},
then the counts and fractions are produced according to \code{grouping_list}, along with total number
of patients.

\item \code{s_count_abnormal_by_worst_grade_by_baseline}: Statistics function, for each NCI-CTCAE grade
group specified in \code{by_grade}, this function calculates the total, counts and fraction of
patients' worst NCI-CTCAE grades in \code{.var} falling into each of the groups
in \code{group_listing}.

\item \code{a_count_abnormal_by_worst_grade_by_baseline}: Formatted Analysis function which can be further customized by
calling \code{\link[rtables:make_afun]{rtables::make_afun()}} on it. It is used as \code{afun} in \code{\link[rtables:analyze]{rtables::analyze()}}.

\item \code{count_abnormal_by_worst_grade_by_baseline}: Layout creating function which can be used for creating tables,
which can take statistics function arguments and additional format arguments (see below).
}}

\examples{
library(random.cdisc.data)
library(dplyr)
adlb <- radlb(cached = TRUE)
adsl <- radsl(cached = TRUE)

# `h_adsl_adlb_merge_using_worst_flag`
adlb_out <- h_adsl_adlb_merge_using_worst_flag(adsl, adlb, worst_flag = c("WGRHIFL" = "Y"))

# `h_adsl_adlb_merge_using_worst_flag` by visit example
adlb_out_by_visit <- h_adsl_adlb_merge_using_worst_flag(
  adsl,
  adlb,
  worst_flag = c("WGRLOFL" = "Y"),
  by_visit = TRUE
  )


# `h_group_counter`
h_group_counter(
  df = adlb_out,
  id = "USUBJID",
  .var = "ATOXGR",
  grouping_list = list(
    `Missing`= "<Missing>",
    `Not High` = c(0, -1, -2, -3, -4),
    `1` = 1,
    `2` = 2,
    `3` = 3,
    `4` = 4
    )
  )


# Count worst post-baseline lab for patients who were `Not Low` at baseline.
s_count_abnormal_by_worst_grade_by_baseline(
  df = adlb_out \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  grouping_list = list(
    "Missing" = "<Missing>",
    "Not Low" = c(0, 1, 2, 3, 4),
    "1" = -1,
    "2" = -2,
    "3" = -3,
    "4" = -4
    ),
  variables = list(
    id = "USUBJID",
    by_var = "BTOXGR",
    by_grade = "Not Low"
  )
)


afun <- make_afun(a_count_abnormal_by_worst_grade_by_baseline, .ungroup_stats = "count_fraction")
afun(
df = adlb_out \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
.var = "ATOXGR",
grouping_list = list(
  "Missing" = "<Missing>",
  "Not High" = c(0, -1, -2, -3, -4),
  "1" = 1,
   "2" = 2,
   "3" = 3,
   "4" = 4
   ),
variables = list(id = "USUBJID",
                 by_var = "BTOXGR",
                 by_grade = "4" )
)


basic_table() \%>\%
  split_cols_by("ARMCD") \%>\%
  add_colcounts() \%>\%
  split_rows_by("PARAMCD") \%>\%
  count_abnormal_by_worst_grade_by_baseline(
    var = "ATOXGR",
    grouping_list = list(
      "Missing" = "<Missing>",
      "Not High" = c(0, -1, -2, -3, -4),
      "1" = 1,
      "2" = 2,
      "3" = 3,
      "4" = 4
      ),
    variables = list(
      id = "USUBJID",
      by_var = "BTOXGR"
      )
    ) \%>\%
  build_table(df = adlb_out, alt_counts_df = adsl)

}
