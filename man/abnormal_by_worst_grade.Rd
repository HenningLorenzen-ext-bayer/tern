% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abnormal_by_worst_grade.R
\name{abnormal_by_worst_grade}
\alias{abnormal_by_worst_grade}
\alias{s_count_abnormal_by_worst_grade}
\alias{a_count_abnormal_by_worst_grade}
\alias{count_abnormal_by_worst_grade}
\title{Patient Counts with the Most Extreme Post-baseline Toxicity Grade per Direction of Abnormality}
\usage{
s_count_abnormal_by_worst_grade(
  df,
  .var = "ATOXGR",
  abnormal = c("low", "high"),
  variables = list(id = "USUBJID", worst_grade_flag = "WGRLOFL")
)

a_count_abnormal_by_worst_grade(
  df,
  .var = "ATOXGR",
  abnormal = c("low", "high"),
  variables = list(id = "USUBJID", worst_grade_flag = "WGRLOFL")
)

count_abnormal_by_worst_grade(
  lyt,
  var,
  abnormal,
  variables,
  ...,
  table_names = abnormal,
  .stats = NULL,
  .formats = NULL,
  .labels = NULL,
  .indent_mods = NULL
)
}
\arguments{
\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{abnormal}{(\code{character})\cr identifying the abnormality direction.}

\item{variables}{(named \code{list} of \code{string})\cr list of additional analysis variables.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{var}{(\code{string})\cr single variable name for the primary analysis variable.}

\item{...}{additional arguments for the lower level functions.}

\item{table_names}{(\code{character})\cr this can be customized in case that the same \code{vars} are analyzed multiple times,
to avoid warnings from \code{rtables}.}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}
}
\value{
\code{\link[=s_count_abnormal_by_worst_grade]{s_count_abnormal_by_worst_grade()}} the single statistic \code{count_fraction} with grade 1 to 5
and "Any" results.

\code{\link[=a_count_abnormal_by_worst_grade]{a_count_abnormal_by_worst_grade()}} returns the corresponding list with formatted \code{\link[rtables:CellValue]{rtables::CellValue()}}.
}
\description{
Primary analysis variable \code{.var} indicates the toxicity grade (numeric), and additional
analysis variables are \code{id} (character or factor) and \code{worst_grade_flag} (logical). For each
direction specified in \code{abnormal} (e.g. high or low) we condition on the worst grade flag and count
patients in the denominator as number of patients with at least one valid measurement during treatment,
and patients in the numerator as follows:
\itemize{
\item \code{1} to \code{5}: Numerator is number of patients with worst grades 1-5 respectively;
\item \code{Any}: Numerator is number of patients with at least one abnormality, which means grade is different from 0.
}
}
\details{
Note that \code{df} should be filtered to include only post-baseline records.
}
\section{Functions}{
\itemize{
\item \code{s_count_abnormal_by_worst_grade}: Statistics function which counts patients with worst grade
for a single \code{abnormal} level, consisting of counts and percentages of patients with worst grade
\code{1} to \code{5}, and \code{Any} non-zero grade.

\item \code{a_count_abnormal_by_worst_grade}: Formatted Analysis function which can be further customized by calling
\code{\link[rtables:make_afun]{rtables::make_afun()}} on it. It is used as \code{afun} in \code{\link[rtables:analyze]{rtables::analyze()}}.

\item \code{count_abnormal_by_worst_grade}: Layout creating function which can be used for creating tables,
which can take statistics function arguments and additional format arguments (see below).
}}

\examples{
library(random.cdisc.data)
library(dplyr)

adlb <- radlb(cached = TRUE)
adlb_f <- adlb \%>\%
  filter(!AVISIT \%in\% c("SCREENING", "BASELINE")) \%>\%
  mutate(
    ATOXGR = as.numeric(as.character(ATOXGR)),
    WGRLOFL = case_when(WGRLOFL == "Y" ~ TRUE, TRUE ~ FALSE),
    WGRHIFL = case_when(WGRHIFL == "Y" ~ TRUE, TRUE ~ FALSE)
  )

s_count_abnormal_by_worst_grade(
  df = adlb_f \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = "low",
  variables = list(id = "USUBJID", worst_grade_flag = "WGRLOFL")
)
s_count_abnormal_by_worst_grade(
  df = adlb_f \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = "high",
  variables = list(id = "USUBJID", worst_grade_flag = "WGRHIFL")
)

# Use the Formatted Analysis function for `analyze()`. We need to ungroup `count_fraction` first
# so that the rtables formatting function `format_count_fraction()` can be applied correctly.
afun <- make_afun(a_count_abnormal_by_worst_grade, .ungroup_stats = "count_fraction")
afun(
  df = adlb_f \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = "high",
  variables = list(id = "USUBJID", worst_grade_flag = "WGRHIFL")
)


basic_table() \%>\%
  count_abnormal_by_worst_grade(
    var = "ATOXGR",
    abnormal = c(Low = "low", High = "high"),
    variables = list(id = "USUBJID", worst_grade_flag = c(Low = "WGRLOFL", High = "WGRHIFL"))
  ) \%>\%
  build_table(df = adlb_f \%>\% filter(ARMCD == "ARM A" & PARAMCD == "CRP"))

basic_table() \%>\%
  split_cols_by("ARMCD") \%>\%
  split_rows_by("PARAMCD") \%>\%
  count_abnormal_by_worst_grade(
    var = "ATOXGR",
    abnormal = c(Low = "low", High = "high"),
    variables = list(id = "USUBJID", worst_grade_flag = c(Low = "WGRLOFL", High = "WGRHIFL"))
  ) \%>\%
  build_table(df = adlb_f)

}
