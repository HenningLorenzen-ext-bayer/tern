% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abnormal_by_worst_grade.R
\name{abnormal_by_worst_grade}
\alias{abnormal_by_worst_grade}
\alias{h_abnormal_by_worst_grade}
\alias{s_abnormal_by_worst_grade}
\title{Patient Counts with the Most Extreme Post-baseline Toxicity Grade per Direction of Abnormality}
\usage{
h_abnormal_by_worst_grade(
  df,
  .var = "ATOXGR",
  abnormal = c("low", "high"),
  variables = list(id = "USUBJID", worst_grade_flag = "WGRLOFL")
)

s_abnormal_by_worst_grade(
  df,
  .var,
  abnormal = c(Low = "low", High = "high"),
  variables = list(id = "USUBJID", worst_grade_flags = c(Low = "WGRLOFL", High =
    "WGRHIFL"))
)

abnormal_by_worst_grade(lyt, vars, ...)
}
\arguments{
\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{abnormal}{(\code{character})\cr identifying the abnormality direction.}

\item{variables}{(named \code{list} of \code{strings})\cr list of additional analysis variables.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{vars}{(\code{character})\cr variable names for the primary analysis variable to be iterated over.}

\item{...}{additional arguments for the lower level functions.}
}
\description{
Primary analysis variable \code{.var} indicates the toxicity grade (numeric), and additional
analysis variables are \code{id} (character or factor) and \code{worst_grade_flag} (logical). For each
direction specified in \code{abnormal} (e.g. high or low) we condition on the worst grade flag and count
patients in the denominator as number of patients with at least one valid measurement during treatment,
and patients in the numerator as follows:
\itemize{
\item \code{1} to \code{5}: Numerator is number of patients with worst grades 1-5 respectively;
\item \code{Any}: Numerator is number of patients with at least one abnormality, which means grade is different from 0.
}
}
\details{
Note that \code{df} should be filtered to include only post-baseline records.
}
\section{Functions}{
\itemize{
\item \code{h_abnormal_by_worst_grade}: For a single \code{abnormal} level, produce a named list with
counts and percentages of patients with worst grade \code{1} to \code{5}, and \code{Any} non-zero grade.

\item \code{s_abnormal_by_worst_grade}: Statistics function which counts patients with worst grade
for multiple \code{abnormal} levels, and returns a list with labeled entries.

\item \code{abnormal_by_worst_grade}: Layout creating function which can be used for creating tables,
which can take statistics function arguments and additional format arguments (see below).
}}

\section{Formatting arguments}{

These additional formatting arguments can be passed to the layout creating function:
\describe{
\item{.stats}{(\code{character})\cr names of the statistics to use}
\item{.indent_mods}{(\code{integer})\cr named vector of indent modifiers for the labels}
\item{.formats}{(\code{character} or \code{list})\cr named vector of formats for the statistics}
\item{.labels}{(\code{character})\cr named vector of labels for the statistics (without indent)}
}
}

\examples{
library(random.cdisc.data)
library(dplyr)
adlb <- radlb(cached = TRUE)
adlb_f <- adlb \%>\%
  dplyr::filter(!AVISIT \%in\% c("SCREENING", "BASELINE")) \%>\%
  dplyr::mutate(
    ATOXGR = as.numeric(as.character(ATOXGR)),
    WGRLOFL = case_when(WGRLOFL == "Y" ~ TRUE, TRUE ~ FALSE),
    WGRHIFL = case_when(WGRHIFL == "Y" ~ TRUE, TRUE ~ FALSE)
  )

h_abnormal_by_worst_grade(
  df = adlb_f \%>\% dplyr::filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = "low",
  variables = list(id = "USUBJID", worst_grade_flag = "WGRLOFL")
)
h_abnormal_by_worst_grade(
  df = adlb_f \%>\% dplyr::filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = "high",
  variables = list(id = "USUBJID", worst_grade_flag = "WGRHIFL")
)


# Use the statistics function to count patients for multiple abnormal levels.
s_abnormal_by_worst_grade(
  df = adlb_f \%>\% dplyr::filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = c(HIGH = "high"),
  variables = list(id = "USUBJID", worst_grade_flag = c(HIGH = "WGRHIFL"))
)

s_abnormal_by_worst_grade(
  df = adlb_f \%>\% dplyr::filter(ARMCD == "ARM A" & PARAMCD == "CRP"),
  .var = "ATOXGR",
  abnormal = c(Low = "low", High = "high"),
  variables = list(id = "USUBJID", worst_grade_flag = c(Low = "WGRLOFL", High = "WGRHIFL"))
)


basic_table() \%>\%
  abnormal_by_worst_grade(
    vars = "ATOXGR",
    abnormal = c(Low = "low", High = "high"),
    variables = list(id = "USUBJID", worst_grade_flag = c(Low = "WGRLOFL", High = "WGRHIFL"))
  ) \%>\%
  build_table(df = adlb_f \%>\% dplyr::filter(ARMCD == "ARM A" & PARAMCD == "CRP"))

basic_table() \%>\%
  split_cols_by("ARMCD") \%>\%
  split_rows_by("PARAMCD") \%>\%
  abnormal_by_worst_grade(
    vars = "ATOXGR",
    abnormal = c(Low = "low", High = "high"),
    variables = list(id = "USUBJID", worst_grade_flag = c(Low = "WGRLOFL", High = "WGRHIFL"))
  ) \%>\%
  build_table(df = adlb_f)

}
