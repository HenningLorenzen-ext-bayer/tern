% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_mmrm.R
\name{a_mmrm}
\alias{a_mmrm}
\title{MMRM model, test, estimate}
\usage{
a_mmrm(
  data,
  formula = AVAL ~ ARM + AVISIT + ARM * VISIT,
  id_var = "USUBJID",
  arm_var = "ARM",
  visit_var = "AVISIT",
  mode = c("df.error", "auto", "boot-satterthwaite"),
  conf_level = 0.95,
  weights_emmeans = "proportional",
  corStruct = NULL
)
}
\arguments{
\item{data}{a \code{data.frame} with all the variables specified in
\code{formula}. Records with missing values in any independent variables
will be excluded.}

\item{formula}{a \code{gls} formula.}

\item{id_var}{a character describing the variable name used as subject IDs,
\code{"USUBJID"} by default.}

\item{arm_var}{a character describing the variable name for \code{\link{arm}},
\code{"ARM"} by default. The arm variable must be factor in \code{data}}

\item{visit_var}{a character describing the variable name for visit,
\code{"AVISIT"} by default. This variable must be factor in data.}

\item{mode}{algorithm for degree of freedom: \code{auto}, \code{df.error} or
\code{boot-satterthwaite}.}

\item{conf_level}{confidence level. Must be number greater than 0 and less
than 1.}

\item{weights_emmeans}{argument from \code{\link[emmeans]{emmeans}}, "proportional" by default.}

\item{corStruct}{\code{NULL} by default or a string with the name of \code{\link[nlme]{corClasses}}.}
}
\value{
a dataframe with MMRM results
}
\description{
MMRM model, test, estimate
}
\examples{
library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE)
ADQS <- radqs(cached = TRUE)
ADQS_f <- ADQS \%>\%
  dplyr::filter(PARAMCD=="FKSI-FWB" & !AVISIT \%in\% c("BASELINE")) \%>\%
  droplevels() \%>\%
  dplyr::mutate(ARM = factor(ARM, levels = c("B: Placebo", "A: Drug X", "C: Combination"))) \%>\%
  dplyr::mutate(AVISITN = rank(AVISITN) \%>\% as.factor() \%>\% as.numeric() \%>\% as.factor())

\dontrun{
# currently not executed because the algorithm to obtain the
# Satterthwaite estimator does not always converge
mmrm_results <- a_mmrm(
  data = ADQS_f,
  formula = AVAL ~ ARM + AVISIT + STRATA1 + BMRKR2 + ARM * AVISIT,
  id_var = "USUBJID",
  arm_var = "ARM",
  visit_var = "AVISIT",
  mode = "boot-satterthwaite",
  conf_level = 0.95,
  weights_emmeans = "proportional",
  corStruct = "corSymm"
)

names(mmrm_results)

mmrm_results["contrast"]
mmrm_results["estimate"]
}
}
