% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/decorate_grob.R
\name{decorate_grob}
\alias{decorate_grob}
\title{Create a grob with titles, footnotes, pages, and plot}
\usage{
decorate_grob(grob, titles, footnotes, page = NULL, npages = NULL,
  max_char = 100, border = TRUE, border_padding = unit(rep(1, 4),
  "lines"), margins = unit(c(2, 1.5, 3, 1.5), "cm"), pady = unit(0.8,
  "lines"), gp = NULL, gp_footnote = gpar(fontsize = 8))
}
\arguments{
\item{grob}{a grid grob object, optionally \code{NULL}}

\item{titles}{character string or vector of character strings. Vector elements
are separated by a newline.}

\item{footnotes}{character string or vector of character strings. Vector
elements are separated by a newline.}

\item{page}{page number, if NULL then no page number is displayed}

\item{npages}{if page is not NULL then the total number of pages in the plot
is expected}

\item{max_char}{if not null, title and footnotes get split to not exceed the
max_char number of characters per title and footnote line.}

\item{border}{boolean, whether a a border should be drawn around the plot or
not}

\item{border_padding}{if border is TRUE then this expects a unit object with
the padding}

\item{margins}{a unit vector with margins (bottom, left, top, right)}

\item{pady}{\code{\link{unit}} object with space between title and plot and
plot and footnote.}

\item{gp}{a gpar object for all of the plot}

\item{gp_footnote}{a gpar object for the footnote and page grob}
}
\value{
a grid grob (gTree)
}
\description{
This is a wrapper function to label a grid, ggplot, or lattice plot grob with
title, footnote, and pages.
}
\examples{

library(grid)
titles <- "Edgar Anderson's Iris Data\\nThis famous (Fisher's or Anderson's) iris data set gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris."
footnotes <- "The species are Iris setosa, versicolor, and virginica.\\niris is a data frame with 150 cases (rows) and 5 variables (columns) named Sepal.Length, Sepal.Width, Petal.Length, Petal.Width, and Species."

## empty plot
grid.newpage()
grid.draw(
  decorate_grob(
    NULL,
    titles = titles,
    footnotes = footnotes,
    page = 4,
    npages = 10
  )
)

# grid
p <- gTree(
   children = gList(
     rectGrob(),
     xaxisGrob(),
     yaxisGrob(),
     textGrob("Sepal.Length", y = unit(-4, "lines")),
     textGrob("Petal.Length", x = unit(-3.5, "lines"), rot = 90),
     pointsGrob(iris$Sepal.Length, iris$Petal.Length, gp = gpar(col=iris$Species), pch=16)
   ),
   vp = vpStack(plotViewport(), dataViewport(xData = iris$Sepal.Length, yData = iris$Petal.Length))
)
grid.newpage(); grid.draw(p)

grid.newpage()
grid.draw(
  decorate_grob(
    grob = p,
    titles = titles,
    footnotes = footnotes,
    page = 1,
    npage = 1
  )
)

## with ggplot2
library(ggplot2)
p_gg <- with(iris, qplot(Sepal.Length, Petal.Length, col = Species))
p_gg
p <- ggplotGrob(p_gg)
grid.newpage()
grid.draw(
  decorate_grob(
    grob = p,
    titles = titles,
    footnotes = footnotes,
    page = 1,
    npage = 1
  )
)

## with lattice
library(lattice)
xyplot(Sepal.Length ~ Petal.Length, data = iris, col = iris$Species)
p <- grid.grab()
grid.newpage()
grid.draw(
  decorate_grob(
    grob = p,
    titles = titles,
    footnotes = footnotes,
    page = 1,
    npage = 1
  )
)
}
