% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/abnormal_by_baseline.R
\name{abnormal_by_baseline}
\alias{abnormal_by_baseline}
\alias{count_abnormal_by_baseline}
\alias{s_count_abnormal_by_baseline}
\alias{analyze_abnormal_by_baseline}
\title{Patient Counts with Abnormal Range Values by Baseline Status}
\usage{
count_abnormal_by_baseline(
  df,
  .var,
  abnormal,
  variables = list(id = "USUBJID", baseline = "BNRIND")
)

s_count_abnormal_by_baseline(df, .var, abnormal, ...)

analyze_abnormal_by_baseline(lyt, vars, ...)
}
\arguments{
\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{abnormal}{(\code{character})\cr identifying the abnormal range level(s) in \code{.var}.}

\item{variables}{(named \code{list} of \code{strings})\cr list of additional analysis variables.}

\item{...}{additional arguments for the lower level functions.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{vars}{(\code{character})\cr variable names for the primary analysis variable to be iterated over.}
}
\description{
Primary analysis variable \code{.var} indicates the abnormal range result (character or factor), and additional
analysis variables are \code{id} (character or factor) and \code{baseline} (character or factor). For each
direction specified in \code{abnormal} (e.g. high or low) we condition on baseline range result and count
patients in the numerator and denominator as follows:
\itemize{
\item \verb{Not <abnormal>}
\itemize{
\item \code{denom}: the number of patients without abnormality at baseline (excluding those with missing baseline)
\item \code{num}:  the number of patients in \code{denom} who also have at least one abnormality post-baseline
}
\item \verb{<Abnormal>}
\itemize{
\item \code{denom}: the number of patients with abnormality at baseline
\item \code{num}: the number of patients in \code{denom} who also have at least one abnormality post-baseline
}
\item \code{Total}
\itemize{
\item \code{denom}: the number of patients with at least one valid measurement post-baseline
\item \code{num}: the number of patients in \code{denom} who also have at least one abnormality post-baseline
}
}
}
\details{
Note that \code{df} should be filtered to include only post-baseline records.
}
\section{Functions}{
\itemize{
\item \code{count_abnormal_by_baseline}: For a single \code{abnormal} level, produce a named list with 3 slots:
\code{not_abnormal}, \code{abnormal} and \code{total}. Each slot contains a vector with \code{num} and \code{denom} counts
of patients.

\item \code{s_count_abnormal_by_baseline}: Statistics function which counts patients with abnormal range values
by baseline status for multiple \code{abnormal} levels, and returns a list with labeled entries.

\item \code{analyze_abnormal_by_baseline}: Layout creating function which can be used for creating tables, which can take
statistics function arguments and additional format arguments (see below).
}}

\section{Formatting arguments}{

These additional formatting arguments can be passed to the layout creating function:
\describe{
\item{.stats}{(\code{character})\cr names of the statistics to use}
\item{.indent_mods}{(\code{integer})\cr named vector of indent modifiers for the labels}
\item{.formats}{(\code{character} or \code{list})\cr named vector of formats for the statistics}
\item{.labels}{(\code{character})\cr named vector of labels for the statistics (without indent)}
}
}

\examples{
df <- data.frame(
 USUBJID = as.character(c(1:6)),
 ANRIND = factor(c(rep("LOW", 4), "NORMAL", "HIGH")),
 BNRIND = factor(c("LOW", "NORMAL", "HIGH", NA, "LOW", "NORMAL"))
 )

# Just for one abnormal level.
count_abnormal_by_baseline(df, .var = "ANRIND", abnormal = "HIGH")


# Use the statistics function to count patients for multiple abnormal levels.
s_count_abnormal_by_baseline(df, .var = "ANRIND", abnormal = c(low = "LOW", high = "HIGH"))


# Layout creating function.
basic_table() \%>\%
  analyze_abnormal_by_baseline(vars = "ANRIND", abnormal = c(high = "HIGH")) \%>\%
  build_table(df)

# Passing of statistics function and formatting arguments.
df2 <- data.frame(
  ID = as.character(c(1, 2, 3, 4)),
  RANGE = factor(c("NORMAL", "LOW", "HIGH", "HIGH")),
  BLRANGE = factor(c("LOW", "HIGH", "HIGH", "NORMAL"))
)

basic_table() \%>\%
  analyze_abnormal_by_baseline(
    vars = "RANGE",
    abnormal = c(low = "LOW"),
    variables = list(id = "ID", baseline = "BLRANGE"),
    .formats = c(not_abnormal = "xx / xx", abnormal = "xx / xx", total = "xx / xx"),
    .indent_mods = c(total = 2L)
  ) \%>\%
  build_table(df2)

}
