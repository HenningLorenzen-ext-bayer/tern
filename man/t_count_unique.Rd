% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_count_unique.R
\name{t_count_unique}
\alias{t_count_unique}
\title{Count unique elements per cell in a vector with subgroups}
\usage{
t_count_unique(
  x,
  col_by,
  subgroups,
  col_N = NULL,
  total = NULL,
  na_rm = TRUE,
  denominator = c("N", "omit"),
  table_tree = FALSE
)
}
\arguments{
\item{x}{a vector}

\item{col_by}{logical, factor or data.frame with reference and comparison group information, the
first \code{level} indicates the reference group. See the functions \code{factor_to_matrix_by}
and \code{add_total_by}.}

\item{subgroups}{A logical data.frame with rows matching the length of \code{x}. Each
column represents a subset to be applied to \code{x} and \code{col_by} prior to
tabulating the unique elements per cell. Label attributes are used for the row names
if they exist. NAs are cast to \code{FALSE}.}

\item{col_N}{a vecor with the reference population per level of \code{col_by}. This by default is often
set to \code{get_N(col_by)}. Names of the list are ignored, they are added in the order they appear.
The default may not appropriate and should be modified by the user when \code{col_by} contains
more than one record per subject.}

\item{total}{string of column name of an added total column using \code{\link[rtables]{by_add_total}} to
\code{col_by} and \code{\link{col_N_add_total}} to \code{col_N}. If \code{NULL} no total column is added.}

\item{na_rm}{a logical value indicating whether \code{NA} values should be
removed from \code{x} prior to counting the unique elements per cell.}

\item{denominator}{either N or omit. With option N, the reference population
from \code{col_N} is used as the denominator. If \code{omit} is chosen,
the percentage is omitted and only the counts are returned.}

\item{table_tree}{logical, if \code{FALSE} then a single \code{rtable} gets returned, if \code{TRUE} a
\code{\link{node}} object gets returned with the elementary \code{rtable} objects.}
}
\value{
an \code{rtable}
}
\description{
This is a wrapper function for \code{t_el_count_unique} useful for tabulating unique values
in subgroups.
}
\examples{

# define analysis subgroups
sbs <- data.frame("grp1" = c(TRUE, TRUE, FALSE, FALSE),
                 "grp2" = c(FALSE, TRUE, TRUE, FALSE),
                 "grp3" = c(FALSE, FALSE, FALSE, FALSE),
                 "grp4" = c(NA, FALSE, NA, TRUE))

t_count_unique(x = c(1:4), col_by = factor(c("A", "A", "B", "B")), subgroups = sbs,
  col_N = c(4, 10))

library(random.cdisc.data)
library(dplyr)

ADSL <- radsl(cached = TRUE)
ADAE <- radae(cached = TRUE)

# define analysis subgroups
ANL <- ADAE \%>\%
 dplyr::transmute(
    SER = AESER == 'Y' ,
    REL = AEREL == 'Y',
    GR5 =  AETOXGR == '5'
  ) \%>\%
  var_relabel(
    SER = 'Serious AE',
    REL = 'Relasted AE',
    GR5 = 'Grade 5 AE'
  )

# number of unqiue patients with events:
t_count_unique(ADAE$USUBJID, col_by = ADAE$ARM, subgroups = ANL,
  col_N = table(ADSL$ARM), total = "All")

# omit percent
tbl <- t_count_unique(ADAE$USUBJID, col_by = ADAE$ARM, subgroups = ANL,
  col_N = table(ADSL$ARM), denominator = "omit")
tbl

# add descriptive row
insert_rrow(indent(tbl, 1), rrow("Total number of patients with at least one"))

}
\seealso{
\code{\link{t_el_count_unique}}, \code{\link{t_el_events_per_term_id}}
}
