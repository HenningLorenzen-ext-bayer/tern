% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/for_plot.R
\name{grobs_arrange}
\alias{grobs_arrange}
\alias{grobs_draw}
\title{Arrange multiple grobs}
\usage{
grobs_arrange(..., grobs = list(...), ncol = NULL, nrow = NULL,
  padding_ht = unit(2, "line"), padding_wt = unit(2, "line"), vp = NULL,
  gp = NULL, name = NULL)

grobs_draw(..., newpage = TRUE)
}
\arguments{
\item{...}{grobs.}

\item{grobs}{list of grobs.}

\item{ncol}{number of columns in layout.}

\item{nrow}{number of rows in layout.}

\item{padding_ht}{unit of length 1, vertical space between each grob.}

\item{padding_wt}{unit of length 1, horizontal space between each grob. Default is 
\code{padding_ht}.}

\item{vp}{a \code{\link{viewport}} object (or \code{NULL}).}

\item{gp}{A \code{\link{gpar}} object.}

\item{name}{a character identifier for the grob.}

\item{newpage}{drow on new page}
}
\description{
Arrange grobs as a new grob with n*m (rows*cols) layout
}
\section{Functions}{
\itemize{
\item \code{grobs_draw}: draw on the current device
}}

\examples{
g1 <- circleGrob(gp = gpar(col = "blue"))
g2 <- circleGrob(gp = gpar(col = "red"))
g3 <- textGrob("TEST TEXT")
grid.newpage()
grid.draw(grobs_arrange(g1, g2, g3, nrow = 2))

grid.newpage()
grid.draw(grobs_arrange(g1, g2, g3, ncol = 3))

grid.newpage()
pushViewport(viewport(layout = grid.layout(1,2)))
vp1 <- viewport(layout.pos.row = 1, layout.pos.col = 2)
grid.draw(grobs_arrange(g1, g2, g3, ncol = 2, vp = vp1))

g1 <- circleGrob(gp = gpar(col = "blue"))
g2 <- circleGrob(gp = gpar(col = "red"))
g3 <- textGrob("TEST TEXT")
grobs_draw(grobs = list(g1, g2, g3), nrow = 2)

}
