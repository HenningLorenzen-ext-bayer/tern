% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_ae_ctc.R
\name{t_ae_ctc}
\alias{t_ae_ctc}
\title{Adverse Events Table by Highest NCI CTCAE Grade}
\usage{
t_ae_ctc(class, term, id, grade, col_by, total = "All Patients", grade_range)
}
\arguments{
\item{class}{system organ class variable.}

\item{term}{preferred term variable.}

\item{id}{unique subject identifier variable.}

\item{grade}{grade of adverse event variable.}

\item{col_by}{group variable that will be used for a column header. \code{col_by}
has to be a factor and can not be missing. See 'Examples'.}

\item{total}{character string that will be used as a label for a column with 
pooled total population, default is "All Patients".}

\item{grade_range}{range of grades in a form of \code{c(x, y)}, default is 
\code{c(1, 5)}. This only has effect on which grades are displayed and 
assures a proper fill in for grades, otherwise no sub-setting of data is 
done. See 'Details'.}
}
\description{
\code{t_ae_ctc} returns adverse events sorted by highest NCI CTCAE grade.
}
\details{
\code{t_ae_ctc} counts patients according to adverse events (AEs) of greatest
 intensity for system organ class (SOC) and overall rows and includes 
 percentages based on the total number of patients in the column heading 
 (i.e. "N=nnn"). If the inention is to use patients number from subject level
 dataset as N for percentage calculation then adeverse events dataset should
 be left joined to subject level dataset and the \code{col_by} variable should
 be dropped from adverse events dataset, see the example. Otherwise, N will be
 derived using adverse events dataset. At the preferred term (PT) level,
 multiple events within a patient of the same PT are counted once using the
 greatest intensity reported. 

\code{t_ae_ctc} orders data by "All Patients" column from the most commonly
 reported SOC to the least frequent one. Within SOC, it sorts by decreasing
 frequency of PT.   

\code{t_ae_ctc} removes any non-complete records, e.g. if class or term are 
 missing.
 
\code{t_ae_ctc} fills in \code{col_by} and \code{grade} with \code{0} value 
in case there was no AEs reported for particular \code{col_by} and/or 
\code{grade} category. Use \code{grade_range} to modify displayed grades, e.g. 
 \code{grade_range = c(3, 5)} will only display grades 3, 4, and 5. Please be
 aware that this is only for display purposes and does not sub-set data. One 
 needs to sub-set data before providing it to \code{t_ae_ctc}.
}
\examples{
# Simple example
library(tibble)
library(dplyr)
ASL <- tibble(
  USUBJID = paste0("id-", 1:10),
  ARM = paste("ARM", LETTERS[rep(c(1,2), c(3,7))])
)


ae_lookup <- tribble(
~CLASS,         ~TERM,   ~GRADE,
"cl A",   "trm A_1/2",        1,
"cl A",   "trm A_2/2",        2,  
"cl B",   "trm B_1/3",        2,
"cl B",   "trm B_2/3",        3,
"cl B",   "trm B_3/3",        1,
"cl C",   "trm C_1/1",        1
)

AAE <- cbind(
  tibble(
    USUBJID = ASL$USUBJID[c(2,2,2,3,3,4,4,4,4,5,6,6,7,7)]
  ),
  ae_lookup[c(1,1,2,6,4,2,2,3,4,2,1,5,4,6),]
)

ANL <- left_join(ASL, AAE, by = "USUBJID")

tbl <- t_ae_ctc(
  class = ANL$CLASS,
  term =  ANL$TERM,
  id = ANL$USUBJID,
  grade = ANL$GRADE,
  col_by = factor(ANL$ARM),
  total = "All Patients",
  grade_range = c(1, 3)
)

tbl



library(random.cdisc.data)

ASL <- radam("ASL")
AAE <- radam("AAE", ADSL = ASL)

ANL <- left_join(AAE, ASL \%>\% select(USUBJID, STUDYID, ARM), by = c("STUDYID", "USUBJID"))

tbl <- with(ANL,
            t_ae_ctc(
              class = ANL$AEBODSYS,
              term =  ANL$AEDECOD,
              id = ANL$USUBJID,
              grade = ANL$AETOXGR,
              col_by = factor(ANL$ARM),
              total = "All Patients",
              grade_range = c(1, 5)
            )
)

tbl

\dontrun{
# the following example should reproduce table t_ae_ctc_ATEZOREL_SENBX.out
file.show('/opt/BIOSTAT/prod/cdpt7805/s28363v/reports/t_ae_ctc_ATEZOREL_SENBX.out')

library(rocheBCE)
AAE <- read_bce('/opt/BIOSTAT/prod/s28363v/libraries/xaae.sas7bdat')
ASL <- read_bce('/opt/BIOSTAT/prod/s28363v/libraries/asl.sas7bdat')

# filter subject-level dataset
asl <- ASL[ASL$SAFFL == "Y", c("USUBJID", "TUMTYPE", "TRTSDTM", "TRT02AN")]
asl$TUMTYPE <- ifelse(asl$TUMTYPE == '', 'OTHER', asl$TUMTYPE)
asl <- asl[!(asl$TRT02AN \%in\% c(7, 8)) & 
(as.Date(asl$TRTSDTM) <= as.Date('2016-10-12')), c('USUBJID', 'TUMTYPE')]

# filter adverse events dataset and drop the col_by variable
aae <- AAE[AAE$TRTEMFL == 'Y' & AAE$ANLFL == 'Y' & AAE$AEREL1 == 'Y', !names(AAE) \%in\% 'TUMTYPE']

# left join subject-level dataset with adverse events
aae <- merge(asl, aae, by = c('USUBJID'), all.x = TRUE)

tbl <- t_ae_ctc(
 class = aae$AEBODSYS,
 term =  aae$AEDECOD,
 id = aae$USUBJID,
 grade = aae$AETOXGR,
 col_by = factor(aae$TUMTYPE),
 total = "All Patients",
 grade_range = c(1, 5)
)

Viewer(tbl)
}
}
\author{
Edgar Manukyan (manukyae) \email{edgar.manukyan@roche.com}
}
