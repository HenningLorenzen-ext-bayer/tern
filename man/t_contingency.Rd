% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_contingency.R
\name{t_contingency}
\alias{t_contingency}
\title{Contingency table (stacked per group)}
\usage{
t_contingency(
  row_grp,
  col,
  row,
  row_grp_lab = NULL,
  col_lab = NULL,
  row_lab = NULL,
  na.strings = "Missing"
)
}
\arguments{
\item{row_grp, col, row}{The three factors used for row grouping,
column modalities and row modalities, respectively. The three factors are
expected to be of equal length.}

\item{row_grp_lab, row_lab, col_lab}{Optional labels for groups of rows,
rows and columns annotation.}

\item{na.strings}{A character string for transformation of missing data
into explicit factor level.}
}
\value{
an \code{\link[rtables]{rtable}} object
}
\description{
This produces a stacked list of contingency tables, one table per group.
The tables report the absolute (n) and relative frequency (\%) for
every combination of modalities between two factors. For each group, the
frequencies (n) add up to the group size (N) and percentages are calculated
using N as the denominator.
}
\details{
Every group is associated with a table composed of a headline where the
group name and size (N) is reported and a contingency table.
The table is annotated with the \code{label} attributes of \code{row_grp}, \code{col} and
\code{row}. If the \code{label} attribute is missing, the annotation is left blank,
unless labels are manually set via the corresponding \verb{*_lab} arguments.

The function is expected to be robust to the classes of the provided objects and
handling of missing values: non-factors are coerced to factors and
missing values are transformed into explicit factor levels.
}
\examples{

# Example 1:
# ==========

n <- 50
g <- sample(LETTERS[1:3], size = n, replace = TRUE)
x <- sample(letters[1:3], size = n, replace = TRUE)
y <- sample(1:3, size = n, replace = TRUE)

t_contingency(g, x, y)

# Example 2:
# ==========

g <- sample(c(rep(NA, n/5), x), size = n)
x <- sample(c(rep(NA, n/5), y), size = n)
y <- sample(c(rep(NA, n/5), g), size = n)

t_contingency(
  row_grp = g,
  col = x,
  row = y,
  na.strings = "Missing",
  row_grp_lab = "Treatment",
  row_lab = "Levels of Factor A",
  col_lab = "Levels of factor B"
)

# Example 3:
# ==========

attr(g, "label") <- "Arm"
attr(x, "label") <- "Baseline"
attr(y, "label") <- "Post-Baseline"

t_contingency(g, y, x)

# Example 4:
# ==========

g <- x <- y <- rep(NA, 50)

t_contingency(g, y, x)
}
