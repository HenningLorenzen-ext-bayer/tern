% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_trees.R
\name{rapply_table_tree}
\alias{rapply_table_tree}
\title{Recursive Apply A Function to leafs of a Table Tree}
\usage{
rapply_table_tree(x, f, apply_to_NULL = FALSE, ...)
}
\arguments{
\item{x}{a \code{\link{table_tree}} object}

\item{f}{a function to be applied to leafs}

\item{apply_to_NULL}{boolean, should \code{f} also be applied to a \code{NULL} leaf or should \code{NULL} leafs
remain \code{NULL} leafs.}

\item{...}{arguments passed to \code{f}}
}
\value{
\code{table_tree} object
}
\description{
The return value of \code{rapply_table_tree} has the same tree structure as the input \code{data_tree} object.
}
\examples{

tbl <- rtable(header = 1:3, rrowl("row", letters[1:3]))

rename_rows <- function(x) {
     row.names(x) <- rep("new name", nrow(x))
     x
}

nl1 <- list(tbl1 = tbl, tbl2 = tbl, tbl3 = NULL)
rapply_table_tree(table_tree(nl1), rename_rows)

nl2 <- list(A = nl1, B = nl1)
rapply_table_tree(table_tree(nl2), rename_rows)

nl3 <- list(X = nl2, Y = nl2, Z = nl2)
rapply_table_tree(table_tree(nl3), rename_rows)

}
