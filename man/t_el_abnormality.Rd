% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_abnormality.R
\name{t_el_abnormality}
\alias{t_el_abnormality}
\title{Count abnormality numerator and denominator for each grade level}
\usage{
t_el_abnormality(
  grade,
  abnormal = c("L", "H"),
  baseline,
  id,
  exclude_base_abn = FALSE,
  col_by,
  col_N = NULL,
  total = NULL
)
}
\arguments{
\item{grade}{a vector specifying the grades. Fill blank with NA using
\code{sas_na()}.}

\item{abnormal}{a vector specifying the unique values that
represent abnormality in the order of display.}

\item{baseline}{a vector with length of \code{nrow(grade)} specifying
the baseline grade for each record. Fill blank with NA using \code{sas_na()}.}

\item{id}{a vector of subject identifier with length of \code{nrow(grade)}}

\item{exclude_base_abn}{boolean to specify whether to exclude subjects with
baseline abnormality in denominator. Default is \code{FALSE}.}

\item{col_by}{(\code{logical}, \code{factor} or \code{data.frame})\cr
Contains reference and comparison group information, the
first \code{level} indicates the reference group. See the functions
\code{\link[rtables]{col_by_to_matrix}} and \code{\link[rtables]{by_add_total}}.}

\item{col_N}{(\code{integer} vector)\cr
Contains the reference population per level of \code{col_by}. This by default is often
set to \code{get_N(col_by)}. Names of the list are ignored, they are added in the order they appear.
The default may not appropriate and should be modified by the user when \code{col_by} contains
more than one record per subject.}

\item{total}{(\code{character} value)\cr
Denotes column name of an added total column using \code{\link[rtables]{by_add_total}} to
\code{col_by} and \code{\link{col_N_add_total}} to \code{col_N}. If \code{NULL} no total column is added.}
}
\value{
an \code{rtable}
}
\description{
Count abnormality numerator and denominator for each grade level
}
\examples{
library(dplyr)

ANL <- tibble(
  USUBJID = c("ID1", "ID1", "ID2", "ID2", "ID3", "ID3"),
  ANRIND = c("N", "L", "N", "N", "N", "H"),
  BNRIND = c("N", "N", "L", "L", "N", ""),
  ARM = factor(rep("ARM A", 6)),
)

t_el_abnormality(
  grade = sas_na(ANL$ANRIND),
  abnormal = c("H", "L"),
  baseline = sas_na(ANL$BNRIND),
  id = ANL$USUBJID,
  col_by = ANL$ARM,
  col_N = table(ANL$ARM),
  exclude_base_abn = TRUE
)

}
