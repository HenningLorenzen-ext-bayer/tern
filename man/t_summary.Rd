% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_summary.R
\name{t_summary}
\alias{t_summary}
\title{Summarize an Object for Different Groups}
\usage{
t_summary(x, col_by, col_N = NULL, total = NULL, ...)
}
\arguments{
\item{x}{an object to dispatch on, see \code{methods("t_summary")}}

\item{col_by}{(\code{logical}, \code{factor} or \code{data.frame})\cr
Contains reference and comparison group information, the
first \code{level} indicates the reference group. See the functions
\code{\link[rtables]{col_by_to_matrix}} and \code{\link[rtables]{by_add_total}}.}

\item{col_N}{(\code{integer} vector)\cr
Contains the reference population per level of \code{col_by}. This by default is often
set to \code{get_N(col_by)}. Names of the list are ignored, they are added in the order they appear.
The default may not appropriate and should be modified by the user when \code{col_by} contains
more than one record per subject.}

\item{total}{(\code{character} value)\cr
Denotes column name of an added total column using \code{\link[rtables]{by_add_total}} to
\code{col_by} and \code{\link{col_N_add_total}} to \code{col_N}. If \code{NULL} no total column is added.}

\item{...}{(optional)\cr
additional arguments passed on to methods}
}
\description{
Summarize an Object for Different Groups
}
\examples{
t_summary(iris$Sepal.Length, iris$Species)

library(random.cdisc.data)
library(dplyr)
ADSL <- radsl(cached = TRUE)

t_summary(x = ADSL$AGE, col_by = ADSL$ARMCD)

t_summary(x = ADSL[, c("AGE", "SEX", "RACE")], col_by = ADSL$ARMCD)

t_summary(
  x = ADSL[, c("AGE", "SEX", "RACE")],
  col_by = ADSL$ARMCD,
  total = "All Patients"
)

with(
  ADSL,
  t_summary(AGE > 65, ARMCD)
)

# examples with hierarchical header
ADSL <- radsl(cached = TRUE)
t_summary(
  x = ADSL[, c("SEX", "AGE")],
  col_by = ADSL$ARM
)

ADSL_f <- ADSL \%>\%
  dplyr::filter(SEX \%in\% c("M", "F")) \%>\%
  mutate(SEX = droplevels(SEX))
t_summary(
  x = ADSL_f$SEX,
  col_by = by_hierarchical(ADSL_f$ARM, ADSL_f$SEX, sep = "-")
)

t_summary(
  x = ADSL_f[, c("SEX", "AGE")],
  col_by = by_hierarchical(ADSL_f$ARM, ADSL_f$SEX, sep = "-")
)

ADSL_f <- ADSL \%>\%
  dplyr::filter(SEX \%in\% c("M", "F"), RACE \%in\% c("ASIAN", "WHITE")) \%>\%
  mutate(
    SEX = droplevels(SEX),
    RACE = droplevels(as.factor(RACE))
  )
t_summary(
  x = ADSL_f[, c("SEX", "RACE")],
  col_by = by_hierarchical(ADSL_f$SEX, ADSL_f$RACE)
)

t_summary(
  x = ADSL_f[, c("SEX", "RACE")],
  col_by = by_hierarchical(ADSL_f$RACE, ADSL_f$SEX)
)

t_summary(
  x = ADSL_f[, c("ITTFL", "BMRKR1", "BEP01FL")],
  col_by = by_hierarchical(ADSL_f$RACE, ADSL_f$SEX)
)

# add total
t_summary(
  x = ADSL_f[, c("ITTFL", "BMRKR1", "BEP01FL")],
  col_by = by_hierarchical(ADSL_f$RACE, ADSL_f$SEX),
  total = "All"
)
}
\seealso{
\code{\link{t_summary.data.frame}},
  \code{\link{t_summary.numeric}}, \code{\link{t_summary.factor}},
  \code{\link{t_summary.logical}}, \code{\link{t_summary.Date}},
  \code{\link{t_summary.character}}, \code{\link{t_summary_by}}
}
