% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/t_abn_shift.R
\name{t_abn_shift}
\alias{t_abn_shift}
\title{Abnormality Shift from Baseline Table}
\usage{
t_abn_shift(
  rri_ana,
  rri_base,
  value_ana,
  value_base,
  abnormal = c("LOW", "HIGH"),
  id,
  col_by,
  row_by,
  col_N = NULL,
  total = NULL,
  table_tree = FALSE
)
}
\arguments{
\item{rri_ana}{a vector specifying the Reference Range Indicator (e.g. High/Low/Normal). \cr
Fill blank with NA using \code{\link[=sas_na]{sas_na()}}.}

\item{rri_base}{a vector specifying the Reference Range Indicator (e.g. High/Low/Normal) at baseline \cr
for the corresponding records in \code{rri_ana}. Fill blank with NA using \code{\link[=sas_na]{sas_na()}}.}

\item{value_ana}{a vector of numeric measurement.}

\item{value_base}{a vector of numeric measurement at baseline \cr
for the corresponding records in \code{value_ana}.}

\item{abnormal}{a vector specifying the unique values that
represent abnormality in the order of display.}

\item{id}{a vector of subject identifier with length of \code{rri_ana}.}

\item{col_by}{(\code{logical}, \code{factor} or \code{data.frame})\cr
Contains reference and comparison group information, the
first \code{level} indicates the reference group. See the functions
\code{\link[rtables]{col_by_to_matrix}} and \code{\link[rtables]{by_add_total}}.}

\item{row_by}{(\code{factor} or \code{data.frame})\cr
Defines how data from \code{x} is split into sub-tables. Dimensions must match
dimensions of \code{x} and no missing values are allowed. Multi-level nesting is possible when
\code{row_by} is a \code{data.frame}. Columns should be ordered with the first column specifying
the first variable to split by and the last column the specifying the last variable to split by.}

\item{col_N}{(\code{integer} vector)\cr
Contains the reference population per level of \code{col_by}. This by default is often
set to \code{get_N(col_by)}. Names of the list are ignored, they are added in the order they appear.
The default may not appropriate and should be modified by the user when \code{col_by} contains
more than one record per subject.}

\item{total}{(\code{character} value)\cr
Denotes column name of an added total column using \code{\link[rtables]{by_add_total}} to
\code{col_by} and \code{\link{col_N_add_total}} to \code{col_N}. If \code{NULL} no total column is added.}

\item{table_tree}{(\code{logical} value)\cr
If \code{FALSE} then a single \code{rtable} gets returned, if \code{TRUE} a
\code{\link{node}} object gets returned with the elementary \code{rtable} objects.}
}
\description{
Summarize the number of patients at the specified visit with the abnormality (e.g. High, Low),
among patients with non-missing value at that visit and a baseline value.
}
\details{
Input data should include all post-baseline records (repeated and
unscheduled). Baseline and screening records should be excluded.
}
\examples{
library(dplyr)
library(random.cdisc.data)
ADSL <- radsl(cached = TRUE)
ADLB <- radlb(cached = TRUE) \%>\%
  dplyr::filter(ABLFL != "Y") \%>\%
  dplyr::filter(AVISIT != "SCREENING") \%>\%
  dplyr::mutate(AVISIT = droplevels(AVISIT))

ADLB_f <- ADLB \%>\% dplyr::filter(PARAMCD == "CRP")

tbl1 <- t_abn_shift(
  rri_ana = ADLB_f$ANRIND,
  rri_base = ADLB_f$BNRIND,
  value_ana = ADLB_f$AVAL,
  value_base = ADLB_f$BASE,
  abnormal = c("LOW", "HIGH"),
  id = ADLB_f$USUBJID,
  row_by = ADLB_f[,  "AVISIT"],
  col_by = ADLB_f$ARM,
  col_N = table(ADSL$ARM),
  table_tree = FALSE
)
\dontrun{
Viewer(tbl1)
}

tbl2 <- t_abn_shift(
  rri_ana = ADLB$ANRIND,
  rri_base = ADLB$BNRIND,
  value_ana = ADLB$AVAL,
  value_base = ADLB$BASE,
  abnormal = c("LOW", "HIGH"),
  id = ADLB$USUBJID,
  row_by = ADLB[, c("PARAM", "AVISIT")],
  col_by = ADLB$ARM,
  col_N = table(ADSL$ARM),
  total = "All Patients",
  table_tree = TRUE
)
\dontrun{
Viewer(to_rtable(tbl2))
}


}
