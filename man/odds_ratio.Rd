% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odds_ratio.R
\name{odds_ratio}
\alias{odds_ratio}
\alias{or_glm}
\alias{s_odds_ratio}
\alias{a_odds_ratio}
\alias{estimate_odds_ratio}
\title{Odds Ratio Estimation}
\usage{
or_glm(data, conf_level)

s_odds_ratio(df, .var, .ref_group, .in_ref_col, conf_level = 0.95)

a_odds_ratio(df, .var, .ref_group, .in_ref_col, conf_level = 0.95)

estimate_odds_ratio(
  lyt,
  vars,
  ...,
  show_labels = "hidden",
  .stats = NULL,
  .formats = NULL,
  .labels = NULL,
  .indent_mods = NULL
)
}
\arguments{
\item{data}{(\verb{data frame})\cr
expected with three variables \code{rsp}, \code{grp}.}

\item{conf_level}{(\code{proportion})\cr confidence level of the interval.}

\item{df}{(\verb{data frame})\cr data set containing all analysis variables.}

\item{.var}{(\code{string})\cr single variable name that is passed by \code{rtables} when requested
by a statistics function.}

\item{.ref_group}{(\verb{data frame} or \code{vector})\cr the data corresponding to the reference group.}

\item{.in_ref_col}{(\code{logical})\cr \code{TRUE} when working with the reference level, \code{FALSE} otherwise.}

\item{lyt}{(\code{layout})\cr input layout where analyses will be added to.}

\item{vars}{(\code{character})\cr variable names for the primary analysis variable to be iterated over.}

\item{...}{arguments passed to \code{s_odds_ratio()}.}

\item{show_labels}{label visibility: one of "default", "visible" and "hidden".}

\item{.stats}{(\code{character})\cr statistics to select for the table.}

\item{.formats}{(named \code{character} or \code{list})\cr formats for the statistics.}

\item{.labels}{(named \code{character})\cr labels for the statistics (without indent).}

\item{.indent_mods}{(named \code{integer})\cr indent modifiers for the labels.}
}
\description{
Compares bivariate responses between two groups in terms of odds ratios
along with a confidence interval.
}
\details{
This function uses either logistic regression for unstratified
analyses, or conditional logistic regression for stratified analyses.
The Wald confidence interval with the specified confidence level is
calculated. Note that, for stratified analyses, there is currently no
implementation for conditional likelihood confidence intervals,
therefore the likelihood confidence interval as an option is not yet
available. Besides, when \code{rsp} contains only responders or non-responders,
then the result values will be \code{NA}, because no odds ratio estimation is
possible.
}
\section{Functions}{
\itemize{
\item \code{or_glm}: estimates the odds ratio based on \code{\link[stats:glm]{stats::glm()}}.

\item \code{s_odds_ratio}: Statistics function which estimates the odds ratio
between a treatment and a control.

\item \code{a_odds_ratio}: Formatted Analysis function which can be further customized by calling
\code{\link[rtables:make_afun]{rtables::make_afun()}} on it. It is used as \code{afun} in \code{\link[rtables:analyze]{rtables::analyze()}}.

\item \code{estimate_odds_ratio}: Layout creating function which can be used for creating
tables, which can take statistics function arguments and additional format
arguments (see below).
}}

\examples{

# Data
data <- data.frame(
  rsp = as.logical(c(1, 1, 0, 1, 0, 0)),
  grp = letters[c(1, 1, 1, 2, 2, 2)]
)

# Odds ratio based on glm.
or_glm(data, conf_level = 0.95)


dta <- data.frame(
  rsp = sample(c(TRUE, FALSE), 100, TRUE),
  grp = factor(rep(c("A", "B"), each = 50))
)

s_odds_ratio(
  df = subset(dta, grp == "A"),
  .var = "rsp",
  .ref_group = subset(dta, grp == "B"),
  .in_ref_col = FALSE
)

a_odds_ratio(
  df = subset(dta, grp == "A"),
  .var = "rsp",
  .ref_group = subset(dta, grp == "B"),
  .in_ref_col = FALSE
)


dta <- data.frame(
  rsp = sample(c(TRUE, FALSE), 100, TRUE),
  grp = factor(rep(c("A", "B"), each = 50))
)

l <- split_cols_by(lyt = NULL, var = "grp", ref_group = "B") \%>\%
  estimate_odds_ratio(vars = "rsp")

build_table(l, df = dta)

}
