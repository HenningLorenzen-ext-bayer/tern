TRTDRS %in% c('ADVERSE EVENT', 'PHYSICIAN DECISION') ~ "Safety",
!is.na(TRTDRS) ~ "Other"
)
) %>% var_relabel(COMPSTUD = "Complete Study",
STUDONS = "On-study Status",
DISSTDFL = "Discontinued Study",
STDDRS = "Reason for Study \r\nDiscontinuation",
GOTTRT = "Received Treatment",
DISTRTFL = "Discontinued Treatment",
TRTDRS = "Reason for Treatment \r\nDiscontinuation"
)
library(purrr)
dsp <- partial(t_el_disposition, col_by = ADSL0$ARM %>% by_add_total("All Patients"), denominator = "N")
treatment_section_rtable <- rbindl_rtables(
list(
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
indent(
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
),
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
),
1
)
)
)
treatment_section_rtable
# easier to manipulate for their purposes by other users
treatment_section_tree <- node(
invisible_node_name("treatment"),
content = NULL,
children = list(
node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
),
node(
invisible_node_name("discontinuedtreatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
children = list(
node(
invisible_node_name("safety"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
)
)
)
),
node(
invisible_node_name("other"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
)
)
)
)
)
)
to_rtable(treatment_section_tree)
n11 <- node(name = "A", content = array(c(1:6), dim = c(2,3)), children = list())
n12 <- node(name = "B", content = array(c(1:6), dim = c(2,3)), children = list())
n13 <- node(name = "C", content = array(c(1:6), dim = c(2,3)), children = list())
n2 <- node(name = "D", content = c(1:3), children = list(n11, n12, n13))
to_rtable(n2) # not working because not a tree of rtables
treatment_section_tree
summary(treatment_section_tree)
to_rtable(treatment_section_tree)
#' n12 <- node(name = "B", content = array(c(1:6), dim = c(2,3)), children = list())
#' n13 <- node(name = "C", content = array(c(1:6), dim = c(2,3)), children = list())
#' n2 <- node(name = "D", content = c(1:3), children = list(n11, n12, n13))
#'
#' # to_rtable(n2) # not working because not a tree of rtables
#'
#' @export to_rtable
#' @rdname to_rtable
#'
#' @examples
node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
)
#' n12 <- node(name = "B", content = array(c(1:6), dim = c(2,3)), children = list())
#' n13 <- node(name = "C", content = array(c(1:6), dim = c(2,3)), children = list())
#' n2 <- node(name = "D", content = c(1:3), children = list(n11, n12, n13))
#'
#' # to_rtable(n2) # not working because not a tree of rtables
#'
#' @export to_rtable
#' @rdname to_rtable
#'
#' @examples
to_rtable(node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
))
devtools::load_all(".")
to_rtable(node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
))
to_rtable(node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
))
rbindl_rtables(lapply(x@children, to_rtable), gap = gap)
remove.packages("rtables")
install.packages("../rtables/", repos = NULL, type="source")
treatment_section_rtable <- rbindl_rtables(
list(
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
indent(
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
),
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
),
1
)
)
)
treatment_section_rtable
devtools::load_all(".")
treatment_section_rtable <- rbindl_rtables(
list(
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
indent(
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
),
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
),
1
)
)
)
treatment_section_rtable
library(random.cdisc.data)
library(dplyr)
ADSL <- radsl(cached = TRUE)
ADSL0[, c("COMPSTUD", "STUDONS")]
ADSL0 <- ADSL %>%
mutate(
COMPSTUD = sample(c('Y','N'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STUDONS = sample(c('Alive: On Treatment', 'Alive: In Follow-up', NA),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STDDRS = sample(c('Death', 'Lost To Follow-Up',
'Protocol Violation', 'Withdrawal By Subject',
'Other'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
GOTTRT = ifelse(!is.na(ACTARMCD), 'Y', 'N') %>% as.factor,
DISTRTFL = sample(c('Y','N'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
TRTDRS = sample(c('ADVERSE EVENT', 'PROGRESSIVE DISEASE',
'PHYSICIAN DECISION', 'LACK OF EFFICACY',
'OTHER'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STUDONS = case_when(
COMPSTUD == 'N' ~ STUDONS
),
STDDRS = case_when(
COMPSTUD == 'N' & is.na(STUDONS) ~ STDDRS
),
DISSTDFL = case_when(
!is.na(STDDRS) ~ "Y"
),
DISTRTFL = case_when(
GOTTRT == 'Y' ~ DISTRTFL
),
TRTDRS = case_when(
DISTRTFL == 'Y' ~ TRTDRS
),
DRSCAT = case_when(
TRTDRS %in% c('ADVERSE EVENT', 'PHYSICIAN DECISION') ~ "Safety",
!is.na(TRTDRS) ~ "Other"
)
) %>% var_relabel(COMPSTUD = "Complete Study",
STUDONS = "On-study Status",
DISSTDFL = "Discontinued Study",
STDDRS = "Reason for Study \r\nDiscontinuation",
GOTTRT = "Received Treatment",
DISTRTFL = "Discontinued Treatment",
TRTDRS = "Reason for Treatment \r\nDiscontinuation"
)
library(purrr)
dsp <- partial(t_el_disposition, col_by = ADSL0$ARM %>% by_add_total("All Patients"), denominator = "N")
treatment_section_rtable
treatment_section_rtable <- rbindl_rtables(
list(
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
indent(
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
),
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
),
1
)
)
)
treatment_section_rtable
# easier to manipulate for their purposes by other users
treatment_section_tree <- node(
invisible_node_name("treatment"),
content = NULL,
children = list(
node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
),
node(
invisible_node_name("discontinuedtreatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
children = list(
node(
invisible_node_name("safety"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
)
)
)
),
node(
invisible_node_name("other"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
)
)
)
)
)
)
to_rtable(treatment_section_tree)
rbindl_rtables(lapply(x@children, to_rtable), gap = gap)
print(rbindl_rtables(lapply(x@children, to_rtable), gap = gap))
to_rtable(treatment_section_tree)
lapply(x@children, to_rtable)
x@children
lapply(x@children, to_rtable)
is.null(lapply(x@children, to_rtable))
remove.packages("rtables")
install.packages("../rtables/", repos = NULL, type="source")
devtools::load_all(".")
library(random.cdisc.data)
library(dplyr)
ADSL <- radsl(cached = TRUE)
ADSL0[, c("COMPSTUD", "STUDONS")]
ADSL0 <- ADSL %>%
mutate(
COMPSTUD = sample(c('Y','N'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STUDONS = sample(c('Alive: On Treatment', 'Alive: In Follow-up', NA),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STDDRS = sample(c('Death', 'Lost To Follow-Up',
'Protocol Violation', 'Withdrawal By Subject',
'Other'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
GOTTRT = ifelse(!is.na(ACTARMCD), 'Y', 'N') %>% as.factor,
DISTRTFL = sample(c('Y','N'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
TRTDRS = sample(c('ADVERSE EVENT', 'PROGRESSIVE DISEASE',
'PHYSICIAN DECISION', 'LACK OF EFFICACY',
'OTHER'),
size=nrow(ADSL),
replace = TRUE) %>% as.factor,
STUDONS = case_when(
COMPSTUD == 'N' ~ STUDONS
),
STDDRS = case_when(
COMPSTUD == 'N' & is.na(STUDONS) ~ STDDRS
),
DISSTDFL = case_when(
!is.na(STDDRS) ~ "Y"
),
DISTRTFL = case_when(
GOTTRT == 'Y' ~ DISTRTFL
),
TRTDRS = case_when(
DISTRTFL == 'Y' ~ TRTDRS
),
DRSCAT = case_when(
TRTDRS %in% c('ADVERSE EVENT', 'PHYSICIAN DECISION') ~ "Safety",
!is.na(TRTDRS) ~ "Other"
)
) %>% var_relabel(COMPSTUD = "Complete Study",
STUDONS = "On-study Status",
DISSTDFL = "Discontinued Study",
STDDRS = "Reason for Study \r\nDiscontinuation",
GOTTRT = "Received Treatment",
DISTRTFL = "Discontinued Treatment",
TRTDRS = "Reason for Treatment \r\nDiscontinuation"
)
library(purrr)
dsp <- partial(t_el_disposition, col_by = ADSL0$ARM %>% by_add_total("All Patients"), denominator = "N")
treatment_section_rtable <- rbindl_rtables(
list(
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
indent(
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
),
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
),
1
)
)
)
treatment_section_rtable
# easier to manipulate for their purposes by other users
treatment_section_tree <- node(
invisible_node_name("treatment"),
content = NULL,
children = list(
node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
),
node(
invisible_node_name("discontinuedtreatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
children = list(
node(
invisible_node_name("safety"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
)
)
)
),
node(
invisible_node_name("other"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
)
)
)
)
)
)
to_rtable(treatment_section_tree)
lapply(x@children, to_rtable)
x@children
to_rtable(treatment_section_tree)
x@children
to_rtable(treatment_section_tree)
x@children
x@children[[1]]
x@children[[1]]@content
to_rtable(x@children[[1]]@content)
to_rtable(x@children[[2]]@content)
to_rtable(x@children[[2,1]]@content)
to_rtable(treatment_section_tree)
to_rtable(x[[2]]@content)
to_rtable(treatment_section_tree)
x
summary(x)
x[[1]]
x[[2]]
x[[2,1]]
x[[2,2]]
to_rtable(x[[2,2]])
to_rtable(x[[2,1]])
to_rtable(x[[1]])
x@children
x
to_rtable(treatment_section_tree)
to_rtable(treatment_section_tree)
x
dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
is(dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment"),
"rtable")
devtools::load_all(".")
# easier to manipulate for their purposes by other users
treatment_section_tree <- node(
invisible_node_name("treatment"),
content = NULL,
children = list(
node(
invisible_node_name("received_treatment"),
content = dsp(ADSL0$GOTTRT == "Y", row.name = "Received treatment")
),
node(
invisible_node_name("discontinuedtreatment"),
dsp(ADSL0$DISTRTFL == "Y", row.name = "Discontinued treatment"),
children = list(
node(
invisible_node_name("safety"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Safety", row.name = "Safety"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Safety"),
1
)
)
)
),
node(
invisible_node_name("other"),
rbindl_rtables(
list(
dsp(ADSL0$DRSCAT == "Other", row.name = "Other"),
indent(
dsp(ADSL0$TRTDRS, subset = ADSL0$DRSCAT %in% "Other"),
1
)
)
)
)
)
)
)
)
to_rtable(treatment_section_tree)
x@content
to_rtable(treatment_section_tree)
is.null(x@content)
is.null(x@content)
is(x@content, "rtable")
devtools::load_all(".")
to_rtable(treatment_section_tree)
devtools::load_all(".")
to_rtable(treatment_section_tree)
