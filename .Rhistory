vapply(x, length, numeric(1))
vapply(col_by_list, length, numeric(1))
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
x[row_by[[1]],]
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
data.frame(x)
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
x[c(2,3),]
x[c(2,3)]
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
row_by[[1]]
x[row_by[[1]],]
lapply(row_by, function(rows) x[rows,])
lapply(row_by, function(rows) col_by[rows,])
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
col_by
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
lapply(row_by, function(rows) col_by[rows,])
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
lapply(x, length)
vapply(x, length, numeric(1))
vapply(col_by_list, length, numeric(1))
vapply(col_by_list, nrow, numeric(1))
col_by
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
x
length(x)
check_col_by(x, col_by, col_N, min_num_levels = 1)
check_col_by(x, col_by, col_N, min_num_levels = 1)
check_col_by(x, col_by, col_N, min_num_levels = 1)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
x
length(x)
length(x_list)
length(col_by)
nrow(x_list)
nrow(col_by)
check_col_by(x, col_by, col_N, min_num_levels = 1)
devtools::load_all(".")
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE
)
t_summary_by(
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = table(ADSL$ARMCD),
drop_levels = TRUE
)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = table(ADSL$ARMCD),
drop_levels = TRUE
)
col_by
ncol(col_by)
length(col_N)
col_N <- table(ADSL$ARMCD)
col_N <- c(col_N, sum(col_N))
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE
)
t_summary(ADSL_AGE65[, c("AGE", "SEX")], col_by = ADSL_AGE65$ARM %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARM)), denominator = "N", drop_levels = TRUE)
library(random.cdisc.data)
library(dplyr)
library(rtables)
ADSL <- cadsl # radsl(N = 100, seed = 1)
ADSL <- var_relabel(ADSL, AGE = "Baseline Age of patient")
# control categorical order
ADSL$SEX <- relevel(ADSL$SEX, "M", "F")
ADSL$SEX[1:10] <- NA
ADSL_AGE65 <- ADSL %>%
dplyr::filter(AGE > 65)
t_summary(ADSL_AGE65[, c("AGE", "SEX")], col_by = ADSL_AGE65$ARM %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARM)), denominator = "N", drop_levels = TRUE)
devtools::load_all(".")
t_summary(ADSL_AGE65[, c("AGE", "SEX")], col_by = ADSL_AGE65$ARM %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARM)), denominator = "N", drop_levels = TRUE)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE
)
col_N_add_total(table(ADSL$ARMCD))
library(dplyr)
library(random.cdisc.data)
ADSL <- radsl(N = 30, seed = 1)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE
)
ADSL$SEX[1:5] <- NA
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE,
useNA = "ifany"
)
devtools::load_all(".")
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD,
col_N = table(ADSL$ARMCD),
total = "All Patients",
drop_levels = TRUE,
useNA = "ifany"
)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = table(ADSL$ARMCD),
drop_levels = TRUE,
useNA = "ifany"
)
debugonce(t_summary.factor)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = table(ADSL$ARMCD),
drop_levels = TRUE,
useNA = "ifany"
)
length(col_N)
ncol(col_by)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD))),
drop_levels = TRUE,
useNA = "ifany"
)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE,
useNA = "ifany"
)
library(dplyr)
library(random.cdisc.data)
ADSL <- radsl(N = 30, seed = 1)
ADSL$SEX[1:5] <- NA
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE,
useNA = "ifany"
)
ADSL <- ADSL %>% select(STUDYID, USUBJID, ARMCD)
ADQS <- radqs(ADSL, seed = 2)
ADQS_f <- ADQS %>%
dplyr::filter(PARAMCD=="BFIALL")
t_summary_by(
x = ADQS_f$AVAL,
row_by = ADQS_f$AVISIT,
col_by = ADQS_f$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
)
ADQS_f$AVALCAT1 <- factor(ifelse(ADQS_f$AVAL >= 0, "Positive", "Negative"),
levels = c("Positive", "Negative"))
ADQS_f <- var_relabel(ADQS_f, AVALCAT1 = "Result" )
t_summary_by(
x = ADQS_f$AVALCAT1,
row_by = ADQS_f$AVISIT,
col_by = ADQS_f$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE
)
library(dplyr)
library(random.cdisc.data)
ADSL <- radsl(N = 30, seed = 1)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = TRUE
)
t_summary_by(
x = ADSL$SEX,
row_by = ADSL$COUNTRY,
col_by = ADSL$ARMCD %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARMCD)),
drop_levels = FALSE
)
?rep
rep(data.frame(x=1:3), 2)
x <- rep(data.frame(x=1:3), 2)
x
x <- rep(data.frame(x=1:3, y = 1:2), 2)
replicate(data.frame(x=1:3, y = 1:2))
x <- rep(data.frame(x=1:3, y = 4:6), 2)
x
replicate(data.frame(x=1:3, y = 4:6))
replicate(data.frame(x=1:3, y = 4:6), 2)
?replicate
?replicate
replicate(2, data.frame(x=1:3, y = 4:6))
?rep
seq(NULL)
seq_along(x)
devtools::load_all(".")
t_summary(iris$Sepal.Length, iris$Species)
library(random.cdisc.data)
library(dplyr)
library(rtables)
ADSL <- cadsl # radsl(N = 100, seed = 1)
t_summary(ADSL[, c("SEX", "AGE")], col_by = by_all("All"), col_N = nrow(ADSL))
devtools::load_all(".")
t_summary(iris$Sepal.Length, iris$Species)
library(random.cdisc.data)
library(dplyr)
library(rtables)
ADSL <- cadsl # radsl(N = 100, seed = 1)
t_summary(ADSL[, c("SEX", "AGE")], col_by = by_all("All"), col_N = nrow(ADSL))
ADSL <- var_relabel(ADSL, AGE = "Baseline Age of patient")
ADSL$SEX <- relevel(ADSL$SEX, "M", "F")
t_summary(iris$Sepal.Length, iris$Species)
t_summary(ADSL[, c("SEX", "AGE")], col_by = by_all("All"), col_N = nrow(ADSL))
ADSL <- cadsl # radsl(N = 100, seed = 1)
t_summary(ADSL[, c("SEX", "AGE")], col_by = by_all("All"), col_N = nrow(ADSL))
ADSL <- var_relabel(ADSL, AGE = "Baseline Age of patient")
# control categorical order
ADSL$SEX <- relevel(ADSL$SEX, "M", "F")
t_summary(ADSL[, c("SEX", "AGE")], col_by = ADSL$ARM %>% by_add_total("All Patients"))
t_summary(ADSL[, c("SEX", "AGE")], col_by = ADSL$ARM %>% by_add_total("All Patients"), useNA = 'always')
ADSL$SEX[1:10] <- NA
t_summary(ADSL[, c("SEX", "AGE")], col_by = ADSL$ARM %>% by_add_total("All Patients"), useNA = 'ifany')
t_summary(ADSL[, c("SEX", "AGE")], col_by = ADSL$ARM %>% by_add_total("All Patients"), denominator = "N",
useNA = 'ifany')
ADSL_AGE65 <- ADSL %>%
dplyr::filter(AGE > 65)
t_summary(ADSL_AGE65[, c("AGE", "SEX")], col_by = ADSL_AGE65$ARM %>% by_add_total("All Patients"),
col_N = col_N_add_total(table(ADSL$ARM)), denominator = "N", drop_levels = TRUE)
tbls <- t_summary(ADSL[, c("SEX", "AGE")], col_by = ADSL$ARM, table_tree = TRUE)
summary(tbls)
rbind_table_tree(tbls)
tbls
summary(tbls)
to_rtable(tbls)
devtools::load_all(".")
library(random.cdisc.data)
ADSL <- radsl(seed = 1)
ADSL$RACE <- factor(
vapply(as.character(ADSL$RACE),
function(x) {
if (nchar(x)>9) paste0(substr(x, 1,9), "...") else x
},
character(1)
)
)
ADTTE <- radtte(ADSL, seed = 2)
ADTTE_f <- subset(ADTTE, PARAMCD == "OS")
fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
data = ADTTE_f, ties = "exact"
)
tbl <- t_coxph(fit_coxph)
devtools::load_all(".")
#' ADTTE <- radtte(ADSL, seed = 2)
#' ADTTE_f <- subset(ADTTE, PARAMCD == "OS")
#' \donttest{
#' fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
#'   data = ADTTE_f, ties = "exact"
#' )
#
#' tbl <- t_coxph(fit_coxph)
#' tbl
#' }
t_coxph <- function(fit_coxph, info_coxph = "Cox Porportional Hazard Model") {
stopifnot(is(fit_coxph, "coxph"))
sfit <- summary(fit_coxph)
hr <- sfit$coefficients[, "exp(coef)", drop = FALSE]
ci <- sfit$conf.int[, c("lower .95", "upper .95"), drop = FALSE]
pvalues <- sfit$coefficients[, "Pr(>|z|)", drop = FALSE]
info <- cbind(hr, ci, pvalues)
sinfo <- split(as.data.frame(info), 1:nrow(info))
rtablel(
header = c("HR", "95% CI of HR", "Wald p-value"),
lapply(sinfo, function(xi) {
rrow(
row.name = rownames(xi),
rcell(xi$`exp(coef)`, format = "xx.xxxx"),
rcell(c(xi$`lower .95`, xi$`upper .95`), format = "(xx.xxxx, xx.xxxx)"),
rcell(xi$`Pr(>|z|)`, format = "xx.xxxx")
)
})
)
}
tbl <- t_coxph(fit_coxph)
#' tbl
library(random.cdisc.data)
ADSL <- radsl(seed = 1)
ADSL$RACE <- factor(
vapply(as.character(ADSL$RACE),
function(x) {
if (nchar(x)>9) paste0(substr(x, 1,9), "...") else x
},
character(1)
)
)
ADTTE <- radtte(ADSL, seed = 2)
ADTTE_f <- subset(ADTTE, PARAMCD == "OS")
fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
#'   data = ADTTE_f, ties = "exact"
#' )
#
#' tbl <- t_coxph(fit_coxph)
fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
data = ADTTE_f, ties = "exact"
)
tbl <- t_coxph(fit_coxph)
coxph
?coxph
fit_coxph
library(survival)
lung
colnames(lung)
?survfit
fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
data = ADTTE_f, ties = "exact"
)
summary(fit_coxph)
fit_coxph
library(survival)
??summary.coxph
devtools::load_all(".")
fit_coxph
summary(fit_coxph)
summary.coxph(fit_coxph)
devtools::document()
devtools::load_all(".")
summary(fit_coxph)
summary.coxph(fit_coxph)
devtools::load_all(".")
t_coxph(fit_coxph)
summary.coxph(fit_coxph)
survival::summary.coxph(fit_coxph)
survival::summary(fit_coxph)
fit <- coxph(Surv(time, status) ~ age + sex, lung)
summary(fit)
fit <- coxph(Surv(time, status) ~ age + sex, lung)
library(survival)
devtools::load_all(".")
??survival
library(survival)
fit <- coxph(Surv(time, status) ~ age + sex, lung)
summary(fit)
fit <- coxph(Surv(time, status) ~ age + sex, lung)
summary.coxph(fit)
res <- summary.coxph(fit)
devtools::load_all(".")
library(random.cdisc.data)
ADSL <- radsl(seed = 1)
ADSL$RACE <- factor(
vapply(as.character(ADSL$RACE),
function(x) {
if (nchar(x)>9) paste0(substr(x, 1,9), "...") else x
},
character(1)
)
)
ADTTE <- radtte(ADSL, seed = 2)
ADTTE_f <- subset(ADTTE, PARAMCD == "OS")
fit_coxph <- coxph(formula = Surv(time = AVAL, time2 = 1-CNSR) ~ ARM + strata(RACE),
data = ADTTE_f, ties = "exact"
)
survival::summary(fit_coxph)
?summary
?
summary.coxph
summary.coxph
summary.coxph
summary.coxph
?summary.coxph
survival::summary.coxph
summary.coxph
survival::summary.coxph
survival::summary
fit <- coxph(Surv(time, status) ~ age + sex, lung)
summary(fit)
library(survival)
fit <- coxph(Surv(time, status) ~ age + sex, lung)
summary(fit)
survival::summary(fit)
?summary
devtools::load_all(".")
?summary
?S3Methods
n11 <- node(name = "A", content = array(c(1:6), dim = c(2,3)), children = list())
class(n11)
